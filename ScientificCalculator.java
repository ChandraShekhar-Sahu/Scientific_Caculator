/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vtjava;

import java.awt.Color;

/**
 *
 * @author DELL
 */
public class ScientificCalculator extends javax.swing.JFrame {

     String S1,S2;
    Double I1=null, I2=null, I3=null, I4=null, I5=null, I6=null, I7=null,I9=null;
    int a=0,b=0,sin=0,cos=0,tan=0;
    /**
     * Creates new form ScientificCalculator
     */
    public ScientificCalculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jRadioButtonMenuItem6 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        T1 = new javax.swing.JTextArea();
        B0 = new javax.swing.JButton();
        light = new javax.swing.JButton();
        clr = new javax.swing.JButton();
        Bd = new javax.swing.JButton();
        Darkmode = new javax.swing.JButton();
        B00 = new javax.swing.JButton();
        XO = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        DO = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B9 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        SO = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        MinO = new javax.swing.JButton();
        sin1 = new javax.swing.JButton();
        cos1 = new javax.swing.JButton();
        tan1 = new javax.swing.JButton();
        rad1 = new javax.swing.JButton();
        deg = new javax.swing.JButton();
        log = new javax.swing.JButton();
        ln = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        pow = new javax.swing.JButton();
        bks = new javax.swing.JButton();
        A1 = new javax.swing.JButton();
        HB2 = new javax.swing.JButton();
        HC3 = new javax.swing.JButton();
        He5 = new javax.swing.JButton();
        HD4 = new javax.swing.JButton();
        Hf6 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        upgrade = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        octal = new javax.swing.JMenuItem();
        decimal = new javax.swing.JMenuItem();
        hexadecimal = new javax.swing.JMenuItem();
        octallto = new javax.swing.JMenu();
        obinary = new javax.swing.JMenuItem();
        odecimal = new javax.swing.JMenuItem();
        ohexadecimal = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        HBinary = new javax.swing.JMenuItem();
        HOctal = new javax.swing.JMenuItem();
        HDecimal = new javax.swing.JMenuItem();
        Decimal = new javax.swing.JMenu();
        DBinary = new javax.swing.JMenuItem();
        DOctal = new javax.swing.JMenuItem();
        DHexaDecimal = new javax.swing.JMenuItem();
        Currency = new javax.swing.JMenu();
        ustors = new javax.swing.JMenuItem();
        rstous = new javax.swing.JMenuItem();
        speed = new javax.swing.JMenu();
        mstokmhr = new javax.swing.JMenuItem();
        kmhrtoms = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        mtomiles = new javax.swing.JMenuItem();
        miletom = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenuItem4.setText("jMenuItem4");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jRadioButtonMenuItem6.setSelected(true);
        jRadioButtonMenuItem6.setText("jRadioButtonMenuItem6");

        jMenuItem2.setText("jMenuItem2");

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu4.setText("Edit");
        jMenuBar1.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        T1.setColumns(20);
        T1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        T1.setEditable(false);
        T1.setRows(5);
        jScrollPane1.setViewportView(T1);

        B0.setText("0");
        B0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B0ActionPerformed(evt);
            }
        });

        light.setText("light");
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightActionPerformed(evt);
            }
        });

        clr.setText("cls");
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });

        Bd.setText(".");
        Bd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdActionPerformed(evt);
            }
        });

        Darkmode.setText("Dark");
        Darkmode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DarkmodeActionPerformed(evt);
            }
        });

        B00.setText("00");
        B00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B00ActionPerformed(evt);
            }
        });

        XO.setText("X");
        XO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XOActionPerformed(evt);
            }
        });

        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        B1.setText("1");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        DO.setText("/");
        DO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOActionPerformed(evt);
            }
        });

        B2.setText("2");
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B7.setText("7");
        B7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B7ActionPerformed(evt);
            }
        });

        B3.setText("3");
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B8.setText("8");
        B8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B8ActionPerformed(evt);
            }
        });

        B4.setText("4");
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B9.setText("9");
        B9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B9ActionPerformed(evt);
            }
        });

        B5.setText("5");
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        SO.setText("+");
        SO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SOActionPerformed(evt);
            }
        });

        B6.setText("6");
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        MinO.setText("-");
        MinO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinOActionPerformed(evt);
            }
        });

        sin1.setText("sin");
        sin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sin1ActionPerformed(evt);
            }
        });

        cos1.setText("cos");
        cos1.setIconTextGap(0);
        cos1.setVerifyInputWhenFocusTarget(false);
        cos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cos1ActionPerformed(evt);
            }
        });

        tan1.setText("tan");
        tan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tan1ActionPerformed(evt);
            }
        });

        rad1.setText("rad");
        rad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad1ActionPerformed(evt);
            }
        });

        deg.setText("deg");
        deg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degActionPerformed(evt);
            }
        });

        log.setText("log");
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        ln.setText("ln");
        ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnActionPerformed(evt);
            }
        });

        sqrt.setText("sqrt");
        sqrt.setIconTextGap(2);
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });

        pow.setText("^");
        pow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powActionPerformed(evt);
            }
        });

        bks.setText("<-");
        bks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bksActionPerformed(evt);
            }
        });

        A1.setText("a");
        A1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A1ActionPerformed(evt);
            }
        });

        HB2.setText("b");
        HB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HB2ActionPerformed(evt);
            }
        });

        HC3.setText("c");
        HC3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HC3ActionPerformed(evt);
            }
        });

        He5.setText("e");
        He5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                He5ActionPerformed(evt);
            }
        });

        HD4.setText("d");
        HD4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HD4ActionPerformed(evt);
            }
        });

        Hf6.setText("f");
        Hf6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hf6ActionPerformed(evt);
            }
        });

        upgrade.setText("UPGRADE");

        jMenu3.setText("Number System");

        jMenu5.setText("Binary to");

        octal.setText("Octal");
        octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalActionPerformed(evt);
            }
        });
        jMenu5.add(octal);

        decimal.setText("Decimal");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        jMenu5.add(decimal);

        hexadecimal.setText("HexaDecimal");
        hexadecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadecimalActionPerformed(evt);
            }
        });
        jMenu5.add(hexadecimal);

        jMenu3.add(jMenu5);

        octallto.setText("Octal to");

        obinary.setText("OBinary");
        obinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obinaryActionPerformed(evt);
            }
        });
        octallto.add(obinary);

        odecimal.setText("ODecimal");
        odecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odecimalActionPerformed(evt);
            }
        });
        octallto.add(odecimal);

        ohexadecimal.setText("OHexaDecimal");
        ohexadecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ohexadecimalActionPerformed(evt);
            }
        });
        octallto.add(ohexadecimal);

        jMenu3.add(octallto);

        jMenu8.setText("Hexadecimal to");

        HBinary.setText("Binary");
        HBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HBinaryActionPerformed(evt);
            }
        });
        jMenu8.add(HBinary);

        HOctal.setText("Ocatal");
        HOctal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOctalActionPerformed(evt);
            }
        });
        jMenu8.add(HOctal);

        HDecimal.setText("Decimal");
        HDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HDecimalActionPerformed(evt);
            }
        });
        jMenu8.add(HDecimal);

        jMenu3.add(jMenu8);

        Decimal.setText("Decimal");

        DBinary.setText("Binary");
        DBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBinaryActionPerformed(evt);
            }
        });
        Decimal.add(DBinary);

        DOctal.setText("Octal");
        DOctal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOctalActionPerformed(evt);
            }
        });
        Decimal.add(DOctal);

        DHexaDecimal.setText("HexaDecimal");
        DHexaDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DHexaDecimalActionPerformed(evt);
            }
        });
        Decimal.add(DHexaDecimal);

        jMenu3.add(Decimal);

        upgrade.add(jMenu3);

        Currency.setText("Currency");

        ustors.setText("$ to Rs.");
        ustors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ustorsActionPerformed(evt);
            }
        });
        Currency.add(ustors);

        rstous.setText("Rs. to $");
        rstous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstousActionPerformed(evt);
            }
        });
        Currency.add(rstous);

        upgrade.add(Currency);

        speed.setText("Speed");

        mstokmhr.setText("m/s to km/hr");
        mstokmhr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mstokmhrActionPerformed(evt);
            }
        });
        speed.add(mstokmhr);

        kmhrtoms.setText("km/hr to m/s");
        kmhrtoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kmhrtomsActionPerformed(evt);
            }
        });
        speed.add(kmhrtoms);

        upgrade.add(speed);

        jMenu6.setText("Length");

        mtomiles.setText("m to miles");
        mtomiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtomilesActionPerformed(evt);
            }
        });
        jMenu6.add(mtomiles);

        miletom.setText("miles to m");
        miletom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miletomActionPerformed(evt);
            }
        });
        jMenu6.add(miletom);

        upgrade.add(jMenu6);

        jMenuBar2.add(upgrade);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HB2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(A1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HC3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HD4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Hf6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                        .addComponent(He5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(B0, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Bd, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B00, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(XO, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(DO, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(clr, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(bks, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(55, 55, 55)
                                        .addComponent(MinO, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(233, 233, 233)
                                        .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(123, 123, 123)
                                        .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pow, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(115, 115, 115)
                                            .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(light, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Darkmode, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(68, 68, 68)
                                            .addComponent(deg, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(sin1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cos1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tan1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rad1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B1)
                    .addComponent(B2)
                    .addComponent(B3)
                    .addComponent(clr)
                    .addComponent(bks)
                    .addComponent(A1))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B4)
                    .addComponent(B5)
                    .addComponent(B6)
                    .addComponent(XO)
                    .addComponent(DO)
                    .addComponent(HB2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B7)
                    .addComponent(B8)
                    .addComponent(B9)
                    .addComponent(SO)
                    .addComponent(MinO)
                    .addComponent(HC3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B0)
                    .addComponent(Bd)
                    .addComponent(B00)
                    .addComponent(light)
                    .addComponent(Darkmode)
                    .addComponent(HD4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sin1)
                    .addComponent(cos1)
                    .addComponent(tan1)
                    .addComponent(rad1)
                    .addComponent(deg)
                    .addComponent(He5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(log)
                    .addComponent(ln)
                    .addComponent(sqrt)
                    .addComponent(pow)
                    .addComponent(equal)
                    .addComponent(Hf6))
                .addContainerGap(74, Short.MAX_VALUE))
                
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B0ActionPerformed
        // TODO add your handling code here:
        S1=T1.getText();
        S1=S1 +0;
        T1.setText(S1);
    }//GEN-LAST:event_B0ActionPerformed

    private void lightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightActionPerformed
        // TODO add your handling code here
        B1.setBackground(Color.WHITE);
        B1.setForeground(Color.BLACK);

        B2.setBackground(Color.WHITE);
        B2.setForeground(Color.BLACK);

        B3.setBackground(Color.WHITE);
        B3.setForeground(Color.BLACK);

        B4.setBackground(Color.WHITE);
        B4.setForeground(Color.BLACK);

        B5.setBackground(Color.WHITE);
        B5.setForeground(Color.BLACK);

        B6.setBackground(Color.WHITE);
        B6.setForeground(Color.BLACK);

        B6.setBackground(Color.WHITE);
        B6.setForeground(Color.BLACK);

        B7.setBackground(Color.WHITE);
        B7.setForeground(Color.BLACK);

        B8.setBackground(Color.WHITE);
        B8.setForeground(Color.BLACK);

        B9.setBackground(Color.WHITE);
        B9.setForeground(Color.BLACK);

        B0.setBackground(Color.WHITE);
        B0.setForeground(Color.BLACK);

        B00.setBackground(Color.WHITE);
        B00.setForeground(Color.BLACK);

        Bd.setBackground(Color.WHITE);
        Bd.setForeground(Color.BLACK);

        clr.setBackground(Color.WHITE);
        clr.setForeground(Color.BLACK);

        XO.setBackground(Color.WHITE);
        XO.setForeground(Color.BLACK);

        MinO.setBackground(Color.WHITE);
        MinO.setForeground(Color.BLACK);

        SO.setBackground(Color.WHITE);
        SO.setForeground(Color.BLACK);

        DO.setBackground(Color.WHITE);
        DO.setForeground(Color.BLACK);

        equal.setBackground(Color.WHITE);
        equal.setForeground(Color.BLACK);

        light.setBackground(Color.WHITE);
        light.setForeground(Color.BLACK);

        Darkmode.setBackground(Color.WHITE);
        Darkmode.setForeground(Color.BLACK);

        T1.setBackground(Color.WHITE);
        T1.setForeground(Color.BLACK);

        jScrollPane1.setBackground(Color.WHITE);
        jScrollPane1.setForeground(Color.BLACK);
        
        bks.setBackground(Color.WHITE);
        bks.setForeground(Color.BLACK);
            
         sin1.setBackground(Color.WHITE);
        sin1.setForeground(Color.BLACK);
        
        cos1.setBackground(Color.WHITE);
        cos1.setForeground(Color.BLACK);
         
        tan1.setBackground(Color.WHITE);
        tan1.setForeground(Color.BLACK);
         
        rad1.setBackground(Color.WHITE);
        rad1.setForeground(Color.BLACK);
         
        deg.setBackground(Color.WHITE);
        deg.setForeground(Color.BLACK);
         
        log.setBackground(Color.WHITE);
        log.setForeground(Color.BLACK);
         
        ln.setBackground(Color.WHITE);
        ln.setForeground(Color.BLACK);
         
        pow.setBackground(Color.WHITE);
        pow.setForeground(Color.BLACK);
        
        sqrt.setBackground(Color.WHITE);
        sqrt.setForeground(Color.BLACK);
        
     
    }//GEN-LAST:event_lightActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrActionPerformed
     
        T1.setText("");
        a=0;
        b=0;
    }//GEN-LAST:event_clrActionPerformed

    private void BdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdActionPerformed
        // TODO add your handling code here:

        if(a==0)
        {
            S1=T1.getText();
            S1=S1 +".";
            T1.setText(S1);
            a++;

        }
        else
        {
            S1=T1.getText();
            T1.setText(S1);
        }
    }//GEN-LAST:event_BdActionPerformed

    private void DarkmodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DarkmodeActionPerformed
  
        B1.setBackground(Color.BLACK);
        B1.setForeground(Color.WHITE);

        B2.setBackground(Color.BLACK);
        B2.setForeground(Color.WHITE);

        B3.setBackground(Color.BLACK);
        B3.setForeground(Color.WHITE);

        B4.setBackground(Color.BLACK);
        B4.setForeground(Color.WHITE);

        B5.setBackground(Color.BLACK);
        B5.setForeground(Color.WHITE);

        B6.setBackground(Color.BLACK);
        B6.setForeground(Color.WHITE);

        B6.setBackground(Color.BLACK);
        B6.setForeground(Color.WHITE);

        B7.setBackground(Color.BLACK);
        B7.setForeground(Color.WHITE);

        B8.setBackground(Color.BLACK);
        B8.setForeground(Color.WHITE);

        B9.setBackground(Color.BLACK);
        B9.setForeground(Color.WHITE);

        B0.setBackground(Color.BLACK);
        B0.setForeground(Color.WHITE);

        B00.setBackground(Color.BLACK);
        B00.setForeground(Color.WHITE);

        Bd.setBackground(Color.BLACK);
        Bd.setForeground(Color.WHITE);

        clr.setBackground(Color.BLACK);
        clr.setForeground(Color.WHITE);

        XO.setBackground(Color.BLACK);
        XO.setForeground(Color.WHITE);

        MinO.setBackground(Color.BLACK);
        MinO.setForeground(Color.WHITE);

        SO.setBackground(Color.BLACK);
        SO.setForeground(Color.WHITE);

        DO.setBackground(Color.BLACK);
        DO.setForeground(Color.WHITE);

        equal.setBackground(Color.BLACK);
        equal.setForeground(Color.WHITE);

        light.setBackground(Color.BLACK);
        light.setForeground(Color.WHITE);

        Darkmode.setBackground(Color.BLACK);
        Darkmode.setForeground(Color.WHITE);

        T1.setBackground(Color.BLACK);
        T1.setForeground(Color.WHITE);

        jScrollPane1.setBackground(Color.BLACK);
        jScrollPane1.setForeground(Color.WHITE);
        
        sin1.setBackground(Color.BLACK);
        sin1.setForeground(Color.WHITE);

        cos1.setBackground(Color.BLACK);
        cos1.setForeground(Color.WHITE);

        tan1.setBackground(Color.BLACK);
        tan1.setForeground(Color.WHITE);

        deg.setBackground(Color.BLACK);
        deg.setForeground(Color.WHITE);

        rad1.setBackground(Color.BLACK);
        rad1.setForeground(Color.WHITE);

        log.setBackground(Color.BLACK);
        log.setForeground(Color.WHITE);

        ln.setBackground(Color.BLACK);
        ln.setForeground(Color.WHITE);

        pow.setBackground(Color.BLACK);
        pow.setForeground(Color.WHITE);

        bks.setBackground(Color.BLACK);
        bks.setForeground(Color.WHITE);

        sqrt.setBackground(Color.BLACK);
        sqrt.setForeground(Color.WHITE);

    }//GEN-LAST:event_DarkmodeActionPerformed

    private void B00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B00ActionPerformed
        try
        {   
        S1=T1.getText();
        S1=S1+"00";
        T1.setText(S1);
          }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B00ActionPerformed

    private void XOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XOActionPerformed
        try
        {
        if(b==0)
        {
            S1=T1.getText();
            I1=Double.valueOf(S1);
            T1.setText("");
            a=0;
            b++;
        }
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_XOActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
       try
       {
        S2=T1.getText();
        I5=Double.valueOf(S2);
        if(I1!=null)
        {
            I6=I1*I5;
            T1.setText(""+I6);
            b=0;
            I1=null;
        }
        
        if(I9!=null)
        {
           Double D=Math.pow(I9,I5);
           T1.setText(""+D);
        }

        if(I2!=null)
        {
            I6=I2/I5;
            T1.setText(""+I6);
            b=0;
            I2=null;
        }

        if(I3!=null)
        {
            I6=I3+I5;
            T1.setText(""+I6);
            b=0;
            I3=null;
        }

        if(I4!=null)
        {
            I6=I4-I5;
            T1.setText(""+I6);
            b=0;
            I4=null;
        }   
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }    

    }//GEN-LAST:event_equalActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
       try
       {
        S1=T1.getText();
        S1=S1 +1;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }

    }//GEN-LAST:event_B1ActionPerformed

    private void DOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOActionPerformed
        try
        {
        if(b==0)
        {
            S1=T1.getText();
            I2=Double.valueOf(S1);
            T1.setText("");
            a=0;
            b++;
        }
        
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_DOActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        try
        {
        S1=T1.getText();
        S1=S1+"2";
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B2ActionPerformed

    private void B7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B7ActionPerformed
        try
        {
        S1=T1.getText();
        S1=S1 +7;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B7ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
      try
      {
        S1=T1.getText();
        S1=S1 +3;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B3ActionPerformed

    private void B8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B8ActionPerformed
       try
       {
        S1=T1.getText();
        S1=S1 +8;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B8ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
      try
      {
        S1=T1.getText();
        S1=S1 +4;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B4ActionPerformed

    private void B9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B9ActionPerformed
        try
        {
        S1=T1.getText();
        S1=S1 +9;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B9ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        try
        {
        S1=T1.getText();
        S1=S1 +5;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B5ActionPerformed

    private void SOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SOActionPerformed
       try
       {
        if(b==0)
        {
            S1=T1.getText();
            I3=Double.valueOf(S1);
            T1.setText("");
            a=0;
            b++;
        }
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_SOActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        try
        {
        S1=T1.getText();
        S1=S1 +6;
        T1.setText(S1);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_B6ActionPerformed

    private void MinOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinOActionPerformed
        try
        {
        if(b==0)
        {
            S1=T1.getText();
            I4=Double.valueOf(S1);
            T1.setText("");
            a=0;
            b++;
        }
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }

    }//GEN-LAST:event_MinOActionPerformed

    private void degActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degActionPerformed
       try
       {
           Double d2=Double.valueOf(T1.getText());
       double d3=Math.toDegrees(d2);
        T1.setText(""+d3);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_degActionPerformed

    private void sin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sin1ActionPerformed
        try
        {
        double t11=Double.parseDouble(T1.getText());
       double I8=Math.sin(t11);
       
  
       T1.setText(""+I8);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_sin1ActionPerformed

    private void bksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bksActionPerformed
      try
      {
        S1=null;
       if(T1.getText().length() >0)
       {
           StringBuilder s = new StringBuilder(T1.getText());
           
           s.deleteCharAt(T1.getText().length()-1);
           S1=s.toString();
           T1.setText(S1);
       }
       
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_bksActionPerformed

    private void cos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cos1ActionPerformed
        try
        {
        double I8=Math.cos(Double.parseDouble(T1.getText()));
       
  
       T1.setText(""+I8);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_cos1ActionPerformed

    private void tan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tan1ActionPerformed
      try
      {
        double I8=Math.tan(Double.parseDouble(T1.getText()));
       
   
       T1.setText(""+I8);
       
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_tan1ActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
      try
      {
        double I8=Math.log10(Double.parseDouble(T1.getText()));
           T1.setText(""+I8);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_logActionPerformed

    private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
       try
       {
        double I8=Math.log(Double.parseDouble(T1.getText()));
           T1.setText(""+I8);
           
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_lnActionPerformed

    private void rad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad1ActionPerformed
       try
       {
        Double d2=Double.valueOf(T1.getText());
       double d3=Math.toRadians(d2);
        T1.setText(""+d3);
        
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_rad1ActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        try
        {
        double I8=Math.sqrt(Double.parseDouble(T1.getText()));
           T1.setText(""+I8);
           
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_sqrtActionPerformed

    private void powActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powActionPerformed
        try
        {
        I9=Double.valueOf(T1.getText());
          T1.setText("");
          
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_powActionPerformed

    private void ustorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ustorsActionPerformed
      try
      {
        S1=T1.getText();
        Double d=Double.parseDouble(S1)*83.06;
        T1.setText(""+d);
        
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_ustorsActionPerformed

    private void rstousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstousActionPerformed
      try
      {
        S1=T1.getText();
        Double d=Double.parseDouble(S1)/83.06;
        T1.setText(""+d);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_rstousActionPerformed

    private void mstokmhrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mstokmhrActionPerformed
       try
       {
        S1=T1.getText();
        Double d=Double.parseDouble(S1)*3.6;
        T1.setText(""+d);
        
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_mstokmhrActionPerformed

    private void kmhrtomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kmhrtomsActionPerformed
       try
       {
        S1=T1.getText();
        Double d=Double.parseDouble(S1)/3.6;
        T1.setText(""+d);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_kmhrtomsActionPerformed

    private void mtomilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtomilesActionPerformed
        try{ 
        S1=T1.getText();
        Double d=Double.parseDouble(S1)*0.0006214;
        T1.setText(""+d);
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_mtomilesActionPerformed

    private void miletomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miletomActionPerformed
       try
       {
        S1=T1.getText();
        Double d=Double.parseDouble(S1)/0.0006214;
        T1.setText(""+d);
        
         }
     catch(Exception e)
     {
     T1.setText("Enter a number");
     }
    }//GEN-LAST:event_miletomActionPerformed

    private void hexadecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexadecimalActionPerformed
    
        try
        {
            S1=T1.getText();
        int i=Integer.parseInt(S1,2);
         String d=Integer.toHexString(i);
        T1.setText(d);
        }
     catch(Exception e)
     {
     T1.setText("Enter a Binary number");
     }
    }//GEN-LAST:event_hexadecimalActionPerformed

    private void octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalActionPerformed
        
        try
        {String binary=T1.getText();
        int decimal=Integer.parseInt(binary,2);
         String octal=Integer.toOctalString(decimal);
        T1.setText(octal);
            }
     catch(Exception e)
     {
     T1.setText("Enter a Binary number");
     }
    }//GEN-LAST:event_octalActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
     
        try{
           S1=T1.getText();
        int i=Integer.parseInt(S1,2);
        
        T1.setText(""+i);
            }
     catch(Exception e)
     {
     T1.setText("Enter a Binary number");
     }
    }//GEN-LAST:event_decimalActionPerformed

    private void obinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obinaryActionPerformed
     try{
         S1=T1.getText();
        int i=Integer.parseInt(S1);
         String d=Integer.toBinaryString(i);
        T1.setText(d);
            }
     catch(Exception e)
     {
     T1.setText("Enter a Octal number");
     }
    }//GEN-LAST:event_obinaryActionPerformed

    private void odecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odecimalActionPerformed
      try
      {
        S1=T1.getText();
        int i=Integer.parseInt(S1,8);
        
        T1.setText(""+i);
            }
     catch(Exception e)
     {
     T1.setText("Enter a Octal number");
     }
    }//GEN-LAST:event_odecimalActionPerformed

    private void ohexadecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ohexadecimalActionPerformed
     try
     {
         S1=T1.getText();
        int i=Integer.parseInt(S1,8);
         String d=Integer.toHexString(i);
        T1.setText(d);
            }
     catch(Exception e)
     {
     T1.setText("Enter a Octal number");
     }
    }//GEN-LAST:event_ohexadecimalActionPerformed

    private void HBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HBinaryActionPerformed
       try
       {
           String hexadimal=T1.getText();
        int decimal=Integer.parseInt(hexadimal,16);
        String binary=Integer.toBinaryString(decimal);
        T1.setText(binary);
            }
     catch(Exception e)
     {
     T1.setText("Enter a HexaDecimal number");
     }
    }//GEN-LAST:event_HBinaryActionPerformed

    private void HOctalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOctalActionPerformed
       try
       {
           String hexadimal=T1.getText();
        int decimal=Integer.parseInt(hexadimal,16);
        String octal=Integer.toOctalString(decimal);
        T1.setText(octal);
         }
     catch(Exception e)
     {
     T1.setText("Enter a HexaDecimal number");
     }
    }//GEN-LAST:event_HOctalActionPerformed

    private void HDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HDecimalActionPerformed
        try{
            
        String hexadimal=T1.getText();
        int decimal=Integer.parseInt(hexadimal,16);
        
        T1.setText(""+decimal);
         }
     catch(Exception e)
     {
     T1.setText("Enter a HexaDecimal number");
     }
    }//GEN-LAST:event_HDecimalActionPerformed

    private void DBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBinaryActionPerformed
     try{
        String decimal=T1.getText();
       int Binary=Integer.parseInt(decimal,2);
    T1.setText(""+Binary);
     }
     catch(Exception e)
     {
     T1.setText("Enter Decimal number");
     }
    }//GEN-LAST:event_DBinaryActionPerformed

    private void DOctalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOctalActionPerformed
     try
     {
         String decimal=T1.getText();
       int Octal=Integer.parseInt(decimal,8);
       T1.setText(""+Octal);
        }
     catch(Exception e)
     {
     T1.setText("Enter a Decimal number");
     }
    }//GEN-LAST:event_DOctalActionPerformed

    private void DHexaDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DHexaDecimalActionPerformed
       try
       {
           String decimal=T1.getText();
       int hexadecimal=Integer.parseInt(decimal,16);
       T1.setText(""+hexadecimal);
        }
     catch(Exception e)
     {
     T1.setText("Enter a Decimal number");
     }
    }//GEN-LAST:event_DHexaDecimalActionPerformed

    private void A1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A1ActionPerformed
       String S1=T1.getText();
       S1=S1+"a";
       T1.setText(S1);
    }//GEN-LAST:event_A1ActionPerformed

    private void HB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HB2ActionPerformed
        String S1=T1.getText();
       S1=S1+"b";
       T1.setText(S1);
    }//GEN-LAST:event_HB2ActionPerformed

    private void HC3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HC3ActionPerformed
     String S1=T1.getText();
       S1=S1+"c";
       T1.setText(S1);
    }//GEN-LAST:event_HC3ActionPerformed

    private void HD4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HD4ActionPerformed
        String S1=T1.getText();
       S1=S1+"d";
       T1.setText(S1);
    }//GEN-LAST:event_HD4ActionPerformed

    private void He5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_He5ActionPerformed
       String S1=T1.getText();
       S1=S1+"e";
       T1.setText(S1);
    }//GEN-LAST:event_He5ActionPerformed

    private void Hf6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hf6ActionPerformed
         String S1=T1.getText();
       S1=S1+"f";
       T1.setText(S1);
    }//GEN-LAST:event_Hf6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScientificCalculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A1;
    private javax.swing.JButton B0;
    private javax.swing.JButton B00;
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton B9;
    private javax.swing.JButton Bd;
    private javax.swing.JMenu Currency;
    private javax.swing.JMenuItem DBinary;
    private javax.swing.JMenuItem DHexaDecimal;
    private javax.swing.JButton DO;
    private javax.swing.JMenuItem DOctal;
    private javax.swing.JButton Darkmode;
    private javax.swing.JMenu Decimal;
    private javax.swing.JButton HB2;
    private javax.swing.JMenuItem HBinary;
    private javax.swing.JButton HC3;
    private javax.swing.JButton HD4;
    private javax.swing.JMenuItem HDecimal;
    private javax.swing.JMenuItem HOctal;
    private javax.swing.JButton He5;
    private javax.swing.JButton Hf6;
    private javax.swing.JButton MinO;
    private javax.swing.JButton SO;
    private javax.swing.JTextArea T1;
    private javax.swing.JButton XO;
    private javax.swing.JButton bks;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton clr;
    private javax.swing.JButton cos1;
    private javax.swing.JMenuItem decimal;
    private javax.swing.JButton deg;
    private javax.swing.JButton equal;
    private javax.swing.JMenuItem hexadecimal;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem kmhrtoms;
    private javax.swing.JButton light;
    private javax.swing.JButton ln;
    private javax.swing.JButton log;
    private javax.swing.JMenuItem miletom;
    private javax.swing.JMenuItem mstokmhr;
    private javax.swing.JMenuItem mtomiles;
    private javax.swing.JMenuItem obinary;
    private javax.swing.JMenuItem octal;
    private javax.swing.JMenu octallto;
    private javax.swing.JMenuItem odecimal;
    private javax.swing.JMenuItem ohexadecimal;
    private javax.swing.JButton pow;
    private javax.swing.JButton rad1;
    private javax.swing.JMenuItem rstous;
    private javax.swing.JButton sin1;
    private javax.swing.JMenu speed;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton tan1;
    private javax.swing.JMenu upgrade;
    private javax.swing.JMenuItem ustors;
    // End of variables declaration//GEN-END:variables
}
